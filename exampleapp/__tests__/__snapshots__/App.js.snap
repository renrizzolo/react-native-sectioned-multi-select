// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches the snapshot 1`] = `
<RCTScrollView
  contentContainerStyle={
    Object {
      "paddingHorizontal": 20,
      "paddingTop": 40,
    }
  }
  keyboardShouldPersistTaps="always"
  style={
    Object {
      "backgroundColor": "#f8f8f8",
    }
  }
>
  <View>
    <Text
      style={
        Object {
          "color": "#333",
          "fontSize": 20,
          "margin": 10,
          "textAlign": "center",
        }
      }
    >
      React native sectioned multi select example.
    </Text>
    <View>
      <Modal
        animationType="fade"
        hardwareAccelerated={false}
        onRequestClose={[Function]}
        supportedOrientations={
          Array [
            "portrait",
            "landscape",
          ]
        }
        transparent={true}
        visible={false}
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Array [
              Object {
                "backgroundColor": "rgba(0,0,0,0.5)",
                "flex": 1,
              },
              Object {},
            ]
          }
        >
          <View
            accessible={true}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "bottom": 0,
                  "flex": 1,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                  "zIndex": 0,
                },
                undefined,
              ]
            }
          />
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                  "backgroundColor": "white",
                  "borderRadius": 6,
                  "flex": 1,
                  "marginHorizontal": 18,
                  "marginVertical": 26,
                  "overflow": "hidden",
                },
                Object {},
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                    "paddingVertical": 5,
                  },
                  Object {
                    "backgroundColor": "#f8f8f8",
                    "flexDirection": "row",
                  },
                ]
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "justifyContent": "center",
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 18,
                      },
                      Object {
                        "marginHorizontal": 15,
                      },
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
              <TextInput
                allowFontScaling={true}
                autoFocus={true}
                onChangeText={[Function]}
                placeholder="Search categories..."
                placeholderTextColor="#999"
                rejectResponderTermination={true}
                selectTextOnFocus={true}
                selectionColor="rgba(0,0,0,0.2)"
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "fontSize": 17,
                      "paddingVertical": 8,
                    },
                    Object {
                      "fontFamily": "Avenir",
                      "fontWeight": "200",
                    },
                    Object {},
                  ]
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              keyboardShouldPersistTaps="always"
              style={
                Array [
                  Object {
                    "flex": 1,
                    "paddingHorizontal": 12,
                  },
                  Object {
                    "paddingHorizontal": 0,
                  },
                ]
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flex": 1,
                      "justifyContent": "center",
                      "marginTop": 30,
                    }
                  }
                >
                  <ActivityIndicator
                    animating={true}
                    color="#999999"
                    hidesWhenStopped={true}
                    size="large"
                  />
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#5c3a9e",
                        "borderRadius": 0,
                        "flex": 0,
                        "flexDirection": "row",
                        "justifyContent": "center",
                        "paddingHorizontal": 16,
                        "paddingVertical": 8,
                      },
                      Object {},
                    ]
                  }
                >
                  <Text
                    style={
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontSize": 18,
                        },
                        Object {
                          "fontFamily": "Avenir",
                          "fontWeight": "bold",
                        },
                        Object {},
                      ]
                    }
                  >
                    0/5 - Confirm
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </RCTSafeAreaView>
      </Modal>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "flexWrap": "wrap",
            },
            Object {
              "borderRadius": 4,
              "marginBottom": 15,
              "marginTop": 5,
              "paddingHorizontal": 10,
              "paddingVertical": 12,
            },
          ]
        }
      >
        <Text
          style={
            Object {
              "color": "red",
              "fontSize": 24,
            }
          }
        >
          Select a fruit
        </Text>
        <Text
          allowFontScaling={false}
          style={
            Array [
              Object {
                "color": undefined,
                "fontSize": 24,
              },
              Object {
                "color": "#333",
              },
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
    <View>
      <View
        style={
          Object {
            "borderBottomColor": "#dadada",
            "borderBottomWidth": 1,
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 24,
              "fontWeight": "bold",
              "marginBottom": 5,
              "marginTop": 20,
            }
          }
        >
          Settings
        </Text>
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Single
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 31,
              "width": 51,
            }
          }
          value={false}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Read only headings
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 31,
              "width": 51,
            }
          }
          value={false}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Expand dropdowns
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={true}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 31,
              "width": 51,
            }
          }
          value={false}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Show dropdown toggles
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 31,
              "width": 51,
            }
          }
          value={false}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Auto-highlight children
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 31,
              "width": 51,
            }
          }
          value={false}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Auto-select children
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          disabled={false}
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 31,
              "width": 51,
            }
          }
          value={false}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Hide Chip Remove Buttons
        </Text>
        <RCTSwitch
          accessibilityRole="button"
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 31,
              "width": 51,
            }
          }
          value={false}
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "flex-end",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontWeight": "bold",
            }
          }
        >
          Remove All
        </Text>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
